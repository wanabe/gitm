// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/gitm.proto

package gitm

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Object struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Object) Reset()         { *m = Object{} }
func (m *Object) String() string { return proto.CompactTextString(m) }
func (*Object) ProtoMessage()    {}
func (*Object) Descriptor() ([]byte, []int) {
	return fileDescriptor_fbd2cb2805ec62ec, []int{0}
}

func (m *Object) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Object.Unmarshal(m, b)
}
func (m *Object) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Object.Marshal(b, m, deterministic)
}
func (m *Object) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Object.Merge(m, src)
}
func (m *Object) XXX_Size() int {
	return xxx_messageInfo_Object.Size(m)
}
func (m *Object) XXX_DiscardUnknown() {
	xxx_messageInfo_Object.DiscardUnknown(m)
}

var xxx_messageInfo_Object proto.InternalMessageInfo

func (m *Object) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type Repository struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Repository) Reset()         { *m = Repository{} }
func (m *Repository) String() string { return proto.CompactTextString(m) }
func (*Repository) ProtoMessage()    {}
func (*Repository) Descriptor() ([]byte, []int) {
	return fileDescriptor_fbd2cb2805ec62ec, []int{1}
}

func (m *Repository) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Repository.Unmarshal(m, b)
}
func (m *Repository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Repository.Marshal(b, m, deterministic)
}
func (m *Repository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Repository.Merge(m, src)
}
func (m *Repository) XXX_Size() int {
	return xxx_messageInfo_Repository.Size(m)
}
func (m *Repository) XXX_DiscardUnknown() {
	xxx_messageInfo_Repository.DiscardUnknown(m)
}

var xxx_messageInfo_Repository proto.InternalMessageInfo

func (m *Repository) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type Commit struct {
	Object               *Object   `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	Parents              []*Object `protobuf:"bytes,2,rep,name=parents,proto3" json:"parents,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Commit) Reset()         { *m = Commit{} }
func (m *Commit) String() string { return proto.CompactTextString(m) }
func (*Commit) ProtoMessage()    {}
func (*Commit) Descriptor() ([]byte, []int) {
	return fileDescriptor_fbd2cb2805ec62ec, []int{2}
}

func (m *Commit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Commit.Unmarshal(m, b)
}
func (m *Commit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Commit.Marshal(b, m, deterministic)
}
func (m *Commit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Commit.Merge(m, src)
}
func (m *Commit) XXX_Size() int {
	return xxx_messageInfo_Commit.Size(m)
}
func (m *Commit) XXX_DiscardUnknown() {
	xxx_messageInfo_Commit.DiscardUnknown(m)
}

var xxx_messageInfo_Commit proto.InternalMessageInfo

func (m *Commit) GetObject() *Object {
	if m != nil {
		return m.Object
	}
	return nil
}

func (m *Commit) GetParents() []*Object {
	if m != nil {
		return m.Parents
	}
	return nil
}

type LogRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	Object               *Object     `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *LogRequest) Reset()         { *m = LogRequest{} }
func (m *LogRequest) String() string { return proto.CompactTextString(m) }
func (*LogRequest) ProtoMessage()    {}
func (*LogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fbd2cb2805ec62ec, []int{3}
}

func (m *LogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogRequest.Unmarshal(m, b)
}
func (m *LogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogRequest.Marshal(b, m, deterministic)
}
func (m *LogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogRequest.Merge(m, src)
}
func (m *LogRequest) XXX_Size() int {
	return xxx_messageInfo_LogRequest.Size(m)
}
func (m *LogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogRequest proto.InternalMessageInfo

func (m *LogRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *LogRequest) GetObject() *Object {
	if m != nil {
		return m.Object
	}
	return nil
}

func init() {
	proto.RegisterType((*Object)(nil), "gitm.protobuf.Object")
	proto.RegisterType((*Repository)(nil), "gitm.protobuf.Repository")
	proto.RegisterType((*Commit)(nil), "gitm.protobuf.Commit")
	proto.RegisterType((*LogRequest)(nil), "gitm.protobuf.LogRequest")
}

func init() { proto.RegisterFile("api/gitm.proto", fileDescriptor_fbd2cb2805ec62ec) }

var fileDescriptor_fbd2cb2805ec62ec = []byte{
	// 241 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x91, 0xcf, 0x4b, 0xc4, 0x30,
	0x10, 0x85, 0xdd, 0xad, 0x54, 0x1c, 0x7f, 0x1c, 0x02, 0xc2, 0x2a, 0x82, 0x35, 0x27, 0x2f, 0x36,
	0xb0, 0x9e, 0xbc, 0x89, 0x5e, 0x05, 0x21, 0x47, 0x6f, 0xc9, 0x12, 0x9b, 0x08, 0xd9, 0x89, 0xc9,
	0x54, 0xf1, 0xbf, 0xb7, 0xa6, 0xbb, 0xb6, 0x16, 0x04, 0x6f, 0x03, 0xf3, 0xe5, 0x7d, 0x8f, 0x0c,
	0x1c, 0xab, 0xe0, 0x44, 0xe3, 0xc8, 0xd7, 0x21, 0x22, 0x21, 0x3b, 0x1a, 0x66, 0xdd, 0xbe, 0xf0,
	0x73, 0x28, 0x9f, 0xf4, 0xab, 0x59, 0x11, 0x63, 0xb0, 0x6b, 0x55, 0xb2, 0x8b, 0x59, 0x35, 0xbb,
	0x3a, 0x94, 0x79, 0xe6, 0x15, 0x80, 0x34, 0x01, 0x93, 0x23, 0x8c, 0x9f, 0xdf, 0x44, 0x50, 0xd4,
	0x13, 0xfb, 0x32, 0xcf, 0xdc, 0x42, 0xf9, 0x80, 0xde, 0x3b, 0x62, 0xd7, 0x50, 0x62, 0x4e, 0xca,
	0xfb, 0x83, 0xe5, 0x49, 0xfd, 0xcb, 0x54, 0xf7, 0x1a, 0xb9, 0x81, 0x98, 0x80, 0xbd, 0xa0, 0xa2,
	0x59, 0x53, 0x5a, 0xcc, 0xab, 0xe2, 0x6f, 0x7e, 0x4b, 0xf1, 0x77, 0x80, 0x47, 0x6c, 0xa4, 0x79,
	0x6b, 0x4d, 0x22, 0x76, 0x0b, 0x10, 0x7f, 0x9a, 0x6d, 0x8c, 0xa7, 0x93, 0x84, 0xa1, 0xba, 0x1c,
	0xc1, 0xa3, 0xa2, 0xf3, 0x7f, 0x14, 0x5d, 0xde, 0x41, 0xd1, 0x79, 0x3b, 0x61, 0xd1, 0x18, 0x62,
	0x53, 0xc7, 0x50, 0xe9, 0x6c, 0x9a, 0xd3, 0xff, 0x0b, 0xdf, 0xb9, 0xbf, 0x7c, 0xbe, 0xe8, 0x36,
	0xb6, 0xd5, 0xf5, 0x0a, 0xbd, 0xf8, 0x50, 0x6b, 0xa5, 0x4d, 0x3e, 0x89, 0xd8, 0xde, 0x46, 0x97,
	0xf9, 0xd5, 0xcd, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x09, 0xa1, 0xbb, 0x37, 0xae, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LogClient is the client API for Log service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogClient interface {
	Get(ctx context.Context, in *LogRequest, opts ...grpc.CallOption) (*Commit, error)
}

type logClient struct {
	cc *grpc.ClientConn
}

func NewLogClient(cc *grpc.ClientConn) LogClient {
	return &logClient{cc}
}

func (c *logClient) Get(ctx context.Context, in *LogRequest, opts ...grpc.CallOption) (*Commit, error) {
	out := new(Commit)
	err := c.cc.Invoke(ctx, "/gitm.protobuf.Log/get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogServer is the server API for Log service.
type LogServer interface {
	Get(context.Context, *LogRequest) (*Commit, error)
}

// UnimplementedLogServer can be embedded to have forward compatible implementations.
type UnimplementedLogServer struct {
}

func (*UnimplementedLogServer) Get(ctx context.Context, req *LogRequest) (*Commit, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterLogServer(s *grpc.Server, srv LogServer) {
	s.RegisterService(&_Log_serviceDesc, srv)
}

func _Log_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitm.protobuf.Log/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogServer).Get(ctx, req.(*LogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Log_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gitm.protobuf.Log",
	HandlerType: (*LogServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "get",
			Handler:    _Log_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/gitm.proto",
}
