// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/gitm.proto

package gitm

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Object struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Object) Reset()         { *m = Object{} }
func (m *Object) String() string { return proto.CompactTextString(m) }
func (*Object) ProtoMessage()    {}
func (*Object) Descriptor() ([]byte, []int) {
	return fileDescriptor_fbd2cb2805ec62ec, []int{0}
}

func (m *Object) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Object.Unmarshal(m, b)
}
func (m *Object) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Object.Marshal(b, m, deterministic)
}
func (m *Object) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Object.Merge(m, src)
}
func (m *Object) XXX_Size() int {
	return xxx_messageInfo_Object.Size(m)
}
func (m *Object) XXX_DiscardUnknown() {
	xxx_messageInfo_Object.DiscardUnknown(m)
}

var xxx_messageInfo_Object proto.InternalMessageInfo

func (m *Object) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type Commit struct {
	Object               *Object  `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	Parent               *Object  `protobuf:"bytes,2,opt,name=parent,proto3" json:"parent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Commit) Reset()         { *m = Commit{} }
func (m *Commit) String() string { return proto.CompactTextString(m) }
func (*Commit) ProtoMessage()    {}
func (*Commit) Descriptor() ([]byte, []int) {
	return fileDescriptor_fbd2cb2805ec62ec, []int{1}
}

func (m *Commit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Commit.Unmarshal(m, b)
}
func (m *Commit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Commit.Marshal(b, m, deterministic)
}
func (m *Commit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Commit.Merge(m, src)
}
func (m *Commit) XXX_Size() int {
	return xxx_messageInfo_Commit.Size(m)
}
func (m *Commit) XXX_DiscardUnknown() {
	xxx_messageInfo_Commit.DiscardUnknown(m)
}

var xxx_messageInfo_Commit proto.InternalMessageInfo

func (m *Commit) GetObject() *Object {
	if m != nil {
		return m.Object
	}
	return nil
}

func (m *Commit) GetParent() *Object {
	if m != nil {
		return m.Parent
	}
	return nil
}

func init() {
	proto.RegisterType((*Object)(nil), "gitm.protobuf.Object")
	proto.RegisterType((*Commit)(nil), "gitm.protobuf.Commit")
}

func init() { proto.RegisterFile("api/gitm.proto", fileDescriptor_fbd2cb2805ec62ec) }

var fileDescriptor_fbd2cb2805ec62ec = []byte{
	// 174 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0x2c, 0xc8, 0xd4,
	0x4f, 0xcf, 0x2c, 0xc9, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x45, 0xb0, 0x93, 0x4a,
	0xd3, 0x94, 0x64, 0xb8, 0xd8, 0xfc, 0x93, 0xb2, 0x52, 0x93, 0x4b, 0x84, 0x84, 0xb8, 0x58, 0x32,
	0x12, 0x8b, 0x33, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0xa5, 0x34, 0x2e, 0x36,
	0xe7, 0xfc, 0xdc, 0xdc, 0xcc, 0x12, 0x21, 0x5d, 0x2e, 0xb6, 0x7c, 0xb0, 0x3a, 0xb0, 0x3c, 0xb7,
	0x91, 0xa8, 0x1e, 0x8a, 0x39, 0x7a, 0x10, 0x43, 0x82, 0xa0, 0x8a, 0x40, 0xca, 0x0b, 0x12, 0x8b,
	0x52, 0xf3, 0x4a, 0x24, 0x98, 0xf0, 0x2a, 0x87, 0x28, 0x32, 0xb2, 0xe1, 0x62, 0xf6, 0xc9, 0x4f,
	0x17, 0x32, 0xe5, 0x62, 0x4e, 0x4f, 0x2d, 0x11, 0xc2, 0xae, 0x58, 0x0a, 0x5d, 0x18, 0xe2, 0x32,
	0x25, 0x06, 0x27, 0xc5, 0x28, 0x79, 0xa0, 0x4c, 0x46, 0x69, 0x92, 0x5e, 0x72, 0x7e, 0xae, 0x7e,
	0x79, 0x62, 0x5e, 0x62, 0x52, 0x2a, 0xd8, 0xcb, 0xfa, 0x30, 0xbf, 0x27, 0xb1, 0x81, 0x75, 0x19,
	0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x1d, 0xa5, 0x2a, 0x11, 0x0e, 0x01, 0x00, 0x00,
}
